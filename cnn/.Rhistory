a
head(ram2)
a <- md_bayes_gen(dat = ram2, form = form, total_yes = FALSE, totaldraws=1000, ntunes=1,
sample =100, thin =1, burnin = 100)
a
args(md_bayes_gen)
a <- md_bayes_gen(dat = ram2, form = form, total_yes = FALSE, totaldraws=1000, ntunes=1,
sample =100, thin =1, burnin = 100, produce_draws = T)
a
?md_bayes_draw
md <- md_bayes_draw(ram2, race_vote_split=c(3,4), form, ntues=1, totaldraws=1000,
sample = 100, thin =1, burin=100)
md <- md_bayes_draw(ram2, race_vote_split=c(3,4), form, ntunes=1, totaldraws=1000,
sample = 100, thin =1, burnin=100)
?md_bayes_draw
mbd_two(md, colnames=c("V1", "V2"))
mbd_two_minority(md, colnames=c("V1", "V2"))
a <- md_bayes_gen(dat = ram2, form = form, total_yes = FALSE, totaldraws=1000, ntunes=1,
sample =100, thin =1, burnin = 100, produce_draws = T)
a
a[[1]]
mbd_two_minority(md, colnames=c("V1", "V2"))
a
md_bayes_table(a)
mbd_two_minority(md, colnames=c("V1", "V2"))
a[[1]]
a <- md_bayes_gen(dat = ram2, form = form, total_yes = FALSE, totaldraws=10000, ntunes=5,
sample =1000, thin =1000, burnin = 1000, produce_draws = T)
a[[1]]
md <- md_bayes_draw(ram2, race_vote_split=c(3,4), form, ntunes=5, totaldraws=10000,
sample = 1000, thin =1000, burnin=1000)
md_bayes_table(a)
mbd_two_minority(md, colnames=c("V1", "V2"))
a[[1]]
a <- md_bayes_gen(dat = ram2, form = form, total_yes = FALSE, totaldraws=1000, ntunes=2,
sample =100, thin =10, burnin = 100, produce_draws = F, ci_TRUE = F)
a
md_bayes_table(a)
canda <- c(10,8, 10, 4, 8)
candb <- 20-canda
white <- c(15, 12, 18, 6, 10)
black <- 20 - white
toy <- data.frame(canda, candb, white, black)
form <- formula(cbind(canda,candb) ~ cbind(black, white))
md_bayes_gen(toy, c(2,3), form, total_yes=FALSE )
md_bayes_gen(toy, form, total_yes=FALSE )
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=0, totaldraws=1,sample=1,burnin=0)
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=0, thin=0totaldraws=1,sample=1,burnin=0)
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=0, thin=0,totaldraws=1,sample=1,burnin=0)
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=0, thin=0,totaldraws=2,sample=1,burnin=0)
toy
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=1,burnin=1)
args(md_bayes_gen)
form
dat = toy
form, ntunes = 1,
totaldraws = 100
form, ntunes = 1
ntunes = 1
form
tune.nocov <- tuneMD(form, data = dat, ntunes = ntunes,
totaldraws = totaldraws, ...)
tune.nocov <- tuneMD(form, data = dat, ntunes = ntunes,
totaldraws = totaldraws)
tune.nocov
thin=1
sample=1
burnin=1
ret.mcmc
args(md_bayes_gen)
md.out <- ei.MD.bayes(form, data = dat, sample = sample,
thin = thin, burnin = burnin,
tune.list = tune.nocov)
md.out
md_draw <- md.out$draws$Cell.counts
md_draw
dat = toy
form
ntunes = 1
totaldraws = 100
thin=0
sample=2
burnin=1
tune.nocov <- tuneMD(form, data = dat, ntunes = ntunes,
totaldraws = totaldraws)
md.out <- ei.MD.bayes(form, data = dat, sample = sample,
thin = thin, burnin = burnin,
tune.list = tune.nocov)
dat = toy
form
ntunes = 1
totaldraws = 100
thin=1
sample=2
burnin=1
tune.nocov <- tuneMD(form, data = dat, ntunes = ntunes,
totaldraws = totaldraws)
md.out <- ei.MD.bayes(form, data = dat, sample = sample,
thin = thin, burnin = burnin,
tune.list = tune.nocov)
md_draw <- md.out$draws$Cell.counts
md_draw
name_extract_rxc <- function(form_object, num) {
form <- gsub("cbind(","", as.character(form)[num],fixed=T)
form <- gsub(")","", form,fixed=T)
var <- unlist ( strsplit(form, ",") )
str_squish( var)
}
race <- name_extract_rxc(form, 3)
candidates <- name_extract_rxc(form, 2)
race
candidates
ci_TRUE
ci_TRUE=F
race_list <- list()
# For loop along Race #
for (i in 1:length(race)) { # open up i loop
# Pull MD-Draws #
race_comb <- md_draw[, grep(race[i], colnames(md_draw))]
total <- apply(race_comb, 1, sum)
v_fill <- matrix(NA, nrow = nrow(race_comb), ncol = ncol(race_comb))
for (j in 1:ncol(v_fill)) { # open j loop
v_fill[, j] <- race_comb[, j]/total
} # close j loop
if (ci_TRUE) { # Get Confidence Intervals #
qtile <- cbind ( mcse.mat(v_fill)*100, mcse.q.mat(v_fill, q=ci[1])[,1]*100,
mcse.q.mat(v_fill, q=ci[2])[,1]*100 )
colnames (qtile) <- c("Mean","SE", paste(ci[1]*100, collapse=""), paste(ci[2]*100, collapse="") )
rownames (qtile) <- candidates
} else { # Don't get Confidence Intervals #
qtile <- cbind ( mcse.mat(v_fill)*100 )
colnames (qtile) <- c("Mean","SE")
rownames (qtile) <- candidates
}
race_list[[i]] <- qtile
}
md_draw
mcse.mat
mcse.q.mat
ci_TRUE
i <- 1
race_comb <- md_draw[, grep(race[i], colnames(md_draw))]
race_comb
total <- apply(race_comb, 1, sum)
v_fill <- matrix(NA, nrow = nrow(race_comb), ncol = ncol(race_comb))
v_fill
for (j in 1:ncol(v_fill)) { # open j loop
v_fill[, j] <- race_comb[, j]/total
} # close j loop
v_fill
qtile <- cbind ( mcse.mat(v_fill)*100 )
?mcse.mat
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=100,burnin=1, ci_TRUE=F)
canda <- c(10,8, 10, 4, 8)
candb <- 20-canda
white <- c(15, 12, 18, 6, 10)
black <- 20 - white
toy <- data.frame(canda, candb, white, black)
form <- formula(cbind(canda,candb) ~ cbind(black, white))
# Then excute md_bayes_gen(); not run here due to time
# md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=100,burnin=1, ci_TRUE=F)
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=100,burnin=1, ci_TRUE=F)
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=10,burnin=1,
ci_TRUE=F)
md_bayes_table(results_rxc)
class ( md_bayes_table(results_rxc) )
canda <- c(10,8, 10, 4, 8)
candb <- 20-canda
white <- c(15, 12, 18, 6, 10)
black <- 20 - white
toy <- data.frame(canda, candb, white, black)
# Generate formula for passage to ei.reg.bayes() function
form <- formula(cbind(canda,candb) ~ cbind(black, white))
# Then execute md_bayes_gen(); not run here due to time
res <- md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=10,burnin=1,
ci_TRUE=F)
md_bayes_table(res)
res
canda <- c(10,8, 10, 4, 8)
candb <- 20-canda
white <- c(15, 12, 18, 6, 10)
black <- 20 - white
toy <- data.frame(canda, candb, white, black)
# Generate formula for passage to ei.reg.bayes() function
form <- formula(cbind(canda,candb) ~ cbind(black, white))
# Then execute md_bayes_gen(); not run here due to time
md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=10,burnin=1)
args(md_bayes_gen)
drawrings <- md_bayes_gen(toy, form, total_yes=FALSE, ntunes=1, thin=1,totaldraws=100,sample=10,burnin                             =1, produce_draws=TRUE)
head ( drawrings[[2]] )
library(devtools)
install_github("lorenc5/eiCompare")
install_github("lorenc5/eiCompare")
library(eiCompare)
?eiCompare
example(md_bayes_gen)
example(md_bayes_gen)
rm(list=ls())
library(stringr)
library(mcmcse)
library(eiCompare)
library(foreign)
library(xtable)
library(stargazer)
library(readstata13)
options(scipen=999)
table_directory <- "~/Dropbox/Corona/academic paper on RxC/r_code/smr_replication/tables"
csv_directory <- "~/Dropbox/Corona/academic paper on RxC/r_code/smr_replication/tables/csv"
lac_10 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/A_2x2/LACounty_2010_insurance(2).dta", convert.factors=F)
lac_10$pct_other <- 1 - lac_10$pct_latino
lac_10 <- na.omit(lac_10)
###############
# Set Vectors #
###############
cands <- c("pct_delatorre", "pct_jones")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Other")
formula1 <- formula(cbind(pct_delatorre,pct_jones) ~ cbind(pct_latino, pct_other))
results_rxc <- md_bayes_gen(dat = lac_10, form = formula1, total="votescast")
results_rxc <- md_bayes_gen(dat = lac_10[1:200,], form = formula1, total="votescast",
ntunes=2, totaldraws=1000, sample=10, burnin=10, thin=1)
results_rxc
results_rxc <- md_bayes_table(results_rxc); results_rxc
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group2,
total = "votescast", data = lac_10[1:200,], table_names = table_names); results_ei
library(eiCompare)
rm(list=ls())
library(devtools)
library(eiCompare)
library(foreign)
library(eiCompare)
library(foreign)
library(readstata13)
options(scipen=999)
lac_10 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/A_2x2/LACounty_2010_insurance(2).dta", convert.factors=F)
lac_10$pct_other <- 1 - lac_10$pct_latino
lac_10 <- na.omit(lac_10)
o_2006 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/C_Rx3/C.iv/orange_fl_2006_school(3).dta", convert.factors=F)
o_2006$pct_other <- 1 - with(o_2006, pct_latino + pct_black)
cor_06 <- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/B_Rx2/corona_2006_citycouncil(4).dta", convert.factors=F)
cor_06$pct_other <- 1 - cor_06$pct_latino
cor_06$pct_breitenbucher <- cor_06$breitenbucher / cor_06$totvote
cor_06$pct_montanez  <- cor_06$montanez / cor_06$totvote
cor_06$pct_spiegel <- cor_06$spiegel / cor_06$totvote
cor_06$pct_skipworth <- cor_06$skipworth / cor_06$totvote
orange12<- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/New Thanksgiving data/orange_fl_2012_aviles.dta")
orange12 <- na.omit(orange12)
cor_04 <- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/B_Rx2/corona_2004_citycouncil(6).dta", convert.factors=F)
cor_04$pct_other <- 1 - cor_04$pct_latino
cor_04$pct_miller <- with(cor_04, miller / totvote)
cor_04$pct_melendez <- with(cor_04, melendez / totvote)
cor_04$pct_nolan <- with(cor_04, nolan / totvote)
cor_04$pct_humphrey <- with(cor_04, humphrey / totvote)
cor_04$pct_schnbal <- with(cor_04, schnbal / totvote)
cor_04$pct_bennett <- with(cor_04, bennett / totvote)
ocean_12 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/B_Rx2/oceanside_2012_citycouncil(7).dta", convert.factors=F)
ocean_12$pct_other <- 1 - ocean_12$pct_latino
vista_12 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/B_Rx2/vista_2012_citycouncil(9).dta", convert.factors=F)
vista_12$pct_other <- 1 - vista_12$pct_latino
san_mat_2010p <- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/New Thanksgiving data/san_mateo_2010p.dta", convert.factors=F)
san_mat_2010p$pct_other <- 1- san_mat_2010p$pct_latino
san_mat_2010p <- na.omit(san_mat_2010p)
oc_12 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/C_Rx3/C.i/orange_ca_2010_insurance.dta", convert.factors=F)
oc_12$pct_white <- 1 - with(oc_12, pct_asian + pct_latino)
full_12 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/C_Rx3/C.iii/fullerton_2012_citycouncil(12).dta", convert.factors=F)
full_12$pct_other <- 1 - with(full_12, pct_latino + pct_asian)
harris_10 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/New Thanksgiving data/harris_tx_2010.dta", convert.factors=F)
harris_10 <- na.omit(harris_10); dim(harris_10)
harris_10$pct_other <- 1 -  with(harris_10, pct_latino  + pct_black  + pct_white)
# Clean the few negatives resulting from 'other' creation #
harris_10$pct_white <- ifelse(harris_10$pct_other < 0, harris_10$pct_white + harris_10$pct_other, harris_10$pct_white)
harris_10$pct_other <- ifelse(harris_10$pct_other < 0, 0, harris_10$pct_other)
# This creates a few pct_white negatives so move small amount to black and 0 out #
harris_10$pct_black <- ifelse(harris_10$pct_white < 0, harris_10$pct_black + harris_10$pct_white, harris_10$pct_black)
harris_10$pct_white <- ifelse(harris_10$pct_white < 0, 0, harris_10$pct_white)
table ( apply(harris_10[, c( "pct_latino","pct_black","pct_white","pct_other")], 1, sum ) )
harris_10p <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/New Thanksgiving data/harris_tx_dem_2010p.dta", convert.factors=F)
harris_10p$pct_other <- 1 -  with(harris_10p, pct_latino + pct_black + pct_white)
harris_10p <- na.omit(harris_10p)
table ( apply(dplyr::select(harris_10p, pct_latino,  pct_black, pct_white, pct_other), 1, sum) )
table ( apply(dplyr::select(harris_10p, pct_earle, pct_katz, pct_chavez), 1, sum) )
# Clean the few negatives resulting from 'other' creation #
harris_10p$pct_white <- ifelse(harris_10p$pct_other < 0, harris_10p$pct_white + harris_10p$pct_other, harris_10p$pct_white)
harris_10p$pct_other <- ifelse(harris_10p$pct_other < 0, 0, harris_10p$pct_other)
# This creates a few pct_white negatives so move small amount to black and 0 out #
harris_10p$pct_black <- ifelse(harris_10p$pct_white < 0, harris_10p$pct_black + harris_10p$pct_white, harris_10p$pct_black)
harris_10p$pct_white <- ifelse(harris_10p$pct_white < 0, 0, harris_10p$pct_white)
o_2008 <- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/C_Rx3/C.iv/orange_fl_2008_soilwater(4).dta", convert.factors=F)
o_2008$pct_other <- 1 - with(o_2008, pct_latino + pct_black)
o_2008$pct_total <- with(o_2008, pct_latino + pct_black + pct_other)
# Clean Data: Get rid of a few pct's over 100 and a few negative pct's. #
plus_rid <- sapply(o_2008$pct_black, function(x) x>1)
o_2008 <- o_2008[!plus_rid,]
neg_rid <- sapply(o_2008$pct_other, function(x) x<0)
o_2008 <- o_2008[!neg_rid,]
la_ag_10 <- read.dta("~/Dropbox/Corona/academic paper on RxC/data/D_Rx4/LA_2010_attygeneral(7).dta", convert.factors=F)
la_ag_10$pct_other <- 1 -  with(la_ag_10, pct_latino  + pct_black  + pct_asian+ pct_white)
table ( apply(la_ag_10[, c( "pct_latino","pct_black","pct_asian", "pct_white", "pct_other")], 1, sum ) )
# Clean the few negatives resulting from 'other' creation #
la_ag_10$pct_white <- ifelse(la_ag_10$pct_other < 0, la_ag_10$pct_white + la_ag_10$pct_other, la_ag_10$pct_white)
la_ag_10$pct_other <- ifelse(la_ag_10$pct_other < 0, 0, la_ag_10$pct_other)
# This creates a few pct_white negatives so move small amount to black and 0 out #
la_ag_10$pct_latino <- ifelse(la_ag_10$pct_white < 0, la_ag_10$pct_latino + la_ag_10$pct_white, la_ag_10$pct_latino)
la_ag_10$pct_white <- ifelse(la_ag_10$pct_white < 0, 0, la_ag_10$pct_white)
table ( apply(la_ag_10[, c( "pct_latino","pct_black","pct_asian", "pct_white","pct_other")], 1, sum ) )
head(la_ag_10)
head(lac_10)
lac_10 <- lac_10[, c("precinct", "votescast","pct_latino","pct_other","pct_delatorre","pct_jones")]
head(o_2006)
o_2006 <- o_2006[, c("precinct", "totalvote", "pct_flynn", "pct_kelly", "pct_cardona",
"pct_latino", "pct_nonlatino")]
head(o_2006)
cands <- c("pct_flynn", "pct_kelly", "pct_cardona" )
race_group2 <- c("~ pct_latino", "~pct_nonlatino")
table_names <- c("EI: Pct Lat", "EI: Pct Non-Latino")
formula1 <- formula(cbind(pct_flynn, pct_kelly, pct_cardona) ~ cbind(pct_latino, pct_nonlatino))
set.seed(555647392)
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group2,
total = "totalvote", data = o_2006, table_names = table_names); results_ei
cor_06 <- read.dta13("~/Dropbox/Corona/academic paper on RxC/data/B_Rx2/corona_2006_citycouncil(4).dta", convert.factors=F)
cor_06$pct_other <- 1 - cor_06$pct_latino
cor_06$pct_breitenbucher <- cor_06$breitenbucher / cor_06$totvote
cor_06$pct_montanez  <- cor_06$montanez / cor_06$totvote
cor_06$pct_spiegel <- cor_06$spiegel / cor_06$totvote
cor_06$pct_skipworth <- cor_06$skipworth / cor_06$totvote
head(cor_06)
cor_06 <- cor_06[, c("precinct", "totvote", "pct_breitenbucher","pct_montanez","pct_spiegel", "pct_skipworth",
"pct_latino","pct_other")]
head(cor_06)
cands <- c("pct_breitenbucher","pct_montanez","pct_spiegel", "pct_skipworth")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Other")
formula1 <- formula(cbind(pct_breitenbucher,pct_montanez,pct_spiegel, pct_skipworth) ~
cbind(pct_latino, pct_other))
results_rxc <- md_bayes_gen( dat = cor_06, form = formula1, total="totvote")
head(ororange12)
head(orange12)
orange12 <- orange12[, c("precinct","totalvote", "pct_clarke","pct_damiani","pct_lasso2012p", "pct_aviles2012p", "pct_pisano",
"pct_latino", "pct_nonlatino")]
cands <- c("pct_clarke","pct_damiani","pct_lasso2012p", "pct_aviles2012p", "pct_pisano")
race_group2 <- c("~ pct_latino", "~ pct_nonlatino")
table_names <- c("EI: Pct Lat", "EI: Pct Non-Latino")
formula1 <- formula(cbind(pct_clarke,pct_damiani,pct_lasso2012p,pct_aviles2012p,pct_pisano)
~ cbind(pct_latino, pct_nonlatino))
results_ei<- ei_est_gen(cand_vector=cands, race_group = race_group2, table_names= table_names,
total = "totalvote", data = orange12); results_ei
results_rxc <- md_bayes_gen( dat = orange12, form = formula1, total="totalvote")
head(cor_04)
cor_04 <- cor_04[, c("precinct","totvote", "pct_miller","pct_melendez","pct_nolan",
"pct_humphrey", "pct_schnbal", "pct_bennett","pct_latino", "pct_other")]
head(cor_04)
results_rxc <- md_bayes_gen( dat = cor_04, form = formula1, total="totvote")
cands <- c("pct_miller","pct_melendez","pct_nolan", "pct_humphrey", "pct_schnbal", "pct_bennett")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Other")
formula1 <- formula(cbind(pct_miller,pct_melendez,pct_nolan, pct_humphrey, pct_schnbal, pct_bennett) ~
cbind(pct_latino, pct_other))
results_rxc <- md_bayes_gen( dat = cor_04, form = formula1, total="totvote")
head(ocean_12)
ocean_12 <- ocean_12[, c("precinct", "tot_vote","pct_dykes","pct_corso","pct_zerinik","pct_snyder",
"pct_sanchez","pct_feller","pct_knott", "pct_latino", "pct_other")]
cands <- c("pct_dykes","pct_corso","pct_zerinik","pct_snyder","pct_sanchez","pct_feller","pct_knott")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Other")
formula1 <- formula(cbind(pct_dykes,pct_corso,pct_zerinik,pct_snyder,pct_sanchez,pct_feller,pct_knott) ~
cbind(pct_latino, pct_other))
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group2,
total = "tot_vote", data = ocean_12, table_names = table_names); results_ei
results_rxc <- md_bayes_gen(dat = ocean_12, form = formula1, total="tot_vote")
head(vista_12)
vista_12 <- vista_12[, c("precinct", "tot_vote","pct_youngrigby","pct_miles","pct_kaiser",
"pct_campbell","pct_lopez","pct_garretson","pct_ford",
"pct_staight","pct_fleming", "pct_latino", "pct_other")]
head(vista_12)
cands <- c("pct_youngrigby","pct_miles","pct_kaiser","pct_campbell","pct_lopez",
"pct_garretson","pct_ford","pct_staight","pct_fleming")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Other")
formula1 <- formula(cbind(pct_youngrigby,pct_miles,pct_kaiser,pct_campbell,pct_lopez,
pct_garretson,pct_ford,pct_staight,pct_fleming) ~
cbind(pct_latino, pct_other))
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group2,
total = "tot_vote", data = vista_12, table_names = table_names); results_ei
results_rxc <- md_bayes_gen(dat = vista_12, form = formula1, total="tot_vote")
head(san_mat_2010p)
summary(san_mat_2010p)
san_mat_2010p <- san_mat_2010p[, c("srprec", "totvote","pct_gutierrez","pct_lenning","pct_martin","pct_mcmicken",
"pct_deligianni","pct_shiehk","pct_nusbaum","pct_romero","pct_blake",
"pct_williams","pct_torlakson","pct_aceves", "pct_latino", "pct_other")]
cands <- c("pct_gutierrez","pct_lenning","pct_martin","pct_mcmicken",
"pct_deligianni","pct_shiehk","pct_nusbaum","pct_romero","pct_blake",
"pct_williams","pct_torlakson","pct_aceves")
race_group2 <- c("~ pct_latino", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Non-Latino")
formula1 <- formula(cbind(pct_gutierrez,pct_lenning,pct_martin,pct_mcmicken,
pct_deligianni,pct_shiehk,pct_nusbaum,pct_romero,pct_blake,
pct_williams,pct_torlakson, pct_aceves) ~ cbind(pct_latino, pct_other))
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group2,
total = "totvote", data = san_mat_2010p,
table_names = table_names); results_ei
results_rxc <- md_bayes_gen(dat = san_mat_2010p, form = formula1, total="totvote")
head(oc_12)
cands <- c("pct_jones", "pct_delatorre")
race_group3 <- c("~ pct_latino", "~ pct_asian", "~ pct_white")
table_names <- c("EI: Pct Lat", "EI: Pct Asian", "EI: Pct White")
formula1 <- formula(cbind(pct_jones,pct_delatorre) ~ cbind(pct_latino, pct_asian, pct_white))
results_rxc <- md_bayes_gen(dat = oc_12, form = formula1, total="tot_vote")
head(full_12)
full_12 <- full_12[, c("srprec", "tot_vote2","pct_jaramillo","pct_hakim","pct_alvarez","pct_reid",
"pct_kiger", "pct_levinson","pct_bartholomew","pct_whitaker","pct_bankhead",
"pct_flory", "pct_rands", "pct_fitzgerald", "pct_latino", "pct_asian",
"pct_other")]
cands <- c("pct_jaramillo","pct_hakim","pct_alvarez","pct_reid","pct_kiger",
"pct_levinson","pct_bartholomew","pct_whitaker","pct_bankhead",
"pct_flory", "pct_rands", "pct_fitzgerald")
race_group3 <- c("~ pct_latino", "~ pct_asian", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Asian", "EI: Pct Other")
formula1 <- formula(cbind(pct_jaramillo,pct_hakim,pct_alvarez,pct_reid,pct_kiger,
pct_levinson,pct_bartholomew,pct_whitaker,pct_bankhead,
pct_flory, pct_rands, pct_fitzgerald) ~
cbind(pct_latino, pct_asian, pct_other))
results_rxc <- md_bayes_gen(dat = full_12, form = formula1, total="tot_vote2")
head(harris_10)
cands <- c("pct_uribe", "pct_patterson")
race_group3 <- c("~ pct_latino", "~ pct_black", "~ pct_white")
table_names <- c("EI: Pct Lat", "EI: Pct Black", "EI: Pct White")
formula1 <- formula(cbind(pct_uribe,pct_patterson) ~ cbind(pct_latino, pct_black, pct_white, pct_other))
results_rxc <- md_bayes_gen(dat = harris_10, form = formula1, total="totvote" )
head(harris_10p)
cands <- c("pct_earle", "pct_katz", "pct_chavez")
race_group3 <- c("~ pct_latino", "~ pct_black", "~ pct_white")
table_names <- c("EI: Pct Lat", "EI: Pct Black", "EI: Pct White")
formula1 <- formula(cbind(pct_earle,pct_katz, pct_chavez) ~
cbind(pct_latino, pct_black, pct_white, pct_other))
results_ei <- ei_est_gen(cand_vector=cands, race_group = race_group3,
total = "totvote", data = harris_10p,
table_names = table_names); results_ei
results_rxc <- md_bayes_gen( dat = harris_10p, form = formula1, total="totvote" )
head(o_2008)
o_2008 <- o_2008[, c("precinct", "tot_vote","pct_cardona2008g","pct_hamada",
"pct_whiting","pct_hamilton","pct_latino", "pct_black", "pct_other")]
cands <- c("pct_cardona2008g","pct_hamada","pct_whiting","pct_hamilton")
race_group3 <- c("~ pct_latino", "~ pct_black", "~ pct_other")
table_names <- c("EI: Pct Lat", "EI: Pct Black", "EI: Pct Other")
formula1 <- formula(cbind(pct_cardona2008g,pct_hamada,pct_whiting,pct_hamilton) ~
cbind(pct_latino, pct_black, pct_other))
results_rxc <- md_bayes_gen( dat = o_2008, form = formula1, total="tot_vote" )
head(la_ag_10)
?save
getwd()
save(cor_04, cor_06, full_12, harris_10, harris_10p, la_ag_10, lac_10, o_2006, o_2008,
oc_12, ocean_12, orange12, san_mat_2010p, vista_12,
file = "~/Dropbox/Corona/academic paper on RxC/r_code/smr_replication/smr_data.Rdata")
head(lac_10)
R.Version()
pkg[!(pkg %in% installed.packages()[, "Package"])]
pkg <- "devtools"
pkg[!(pkg %in% installed.packages()[, "Package"])]
install.packages()[, "Package"]
installed.packages()[, "Package"]
installed.packages()[, "Package"]
pkg %in% installed.packages()[, "Package"]
!(pkg %in% installed.packages()[, "Package"])
(pkg %in% installed.packages()[, "Package"])
!(pkg %in% installed.packages()[, "Package"])
(pkg %in% installed.packages()[, "Package"])
pkg %in% installed.packages()[, "Package"]) == FALSE
pkg %in% installed.packages()[, "Package"])
pkg %in% installed.packages()[, "Package"]
pkg %in% installed.packages()[, "Package"] == FALSE
pkg %in% installed.packages()[, "Package"]
if("devtools" %in% installed.packages()[, "Package"] == FALSE) {
install.packagese("devtools")
}
?eiCompare
version("eiCompare")
packageVersion("eiCompare")
packageVersion("eiCompare")== '2.4'
rm(list=ls())
##############################
#     ---- Packages ----     #
##############################
library(quanteda)
library(striprtf)
library(stringr)
library(readxl); library(writexl)
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis"); list.files()
source ("cgu4_functions.R")
dir <- paste(getwd(), "cable/cnn", sep="/"); list.files
dir
list.files(dir)
list.files(path=dir)
list.files(path="/Users/lorencollingwood/Dropbox/collingwood_research/cgu_workshop/text_analysis/cable/cnn")
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis"); list.files()
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis")
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis/cnn")
list.files()
list.files(dir)
list.files(getwd())
source ("cgu4_functions.R")
source ("cgu4_functions.R")
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis"); list.files()
####################################################
# Create directory with single media segment files #
# Lexis-Uni downloads single CNN media segments    #
# Each segment is a different .rtf file            #
####################################################
source ("cgu4_functions.R")
dir <- paste(getwd(), "cable/cnn", sep="/"); list.files
dir <- paste(getwd(), "cable/cnn", sep="/"); list.files()
setwd("~/Dropbox/collingwood_research/cgu_workshop/text_analysis/cnn"); list.files()
rtf_dat <- read_rtf_single_directory(getwd(), filter_words = "child detention|children detained|children detention|detention policy|family separation|families separated|zero tolerance")
